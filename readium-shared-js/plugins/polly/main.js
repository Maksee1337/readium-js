/** * This plugin helps to properly load the Hypothes.is client with Readium. * Enable this plugin if you want to add the Hypothesis client to your reader * so that visitors can annotate EPUBs without having to install * the Hypothesis browser extension. */define('readium_plugin_polly/main',['readium_js_plugins', 'readium_shared_js/globals', './controller'], function (Plugins,Globals, PollyController) {    //var H_EMBED_URL = 'https://sdk.amazonaws.com/js/aws-sdk-2.410.0.min.js';    Plugins.register("polly", function (api) {        let reader = api.reader;        let _pollyController;        let _initialized = false;        let self = this;        let TTSOn = false;        // const script = document.createElement('script');        // script.setAttribute('src', H_EMBED_URL);        // script.setAttribute('async', 'true');        // document.head.appendChild(script);        function isInitialized() {            if (!_initialized) {                api.plugin.warn('Not initialized!')            }            return _initialized;        }        this.init = function () {            AWS.config.region = 'us-east-1';            AWS.config.credentials = new AWS.CognitoIdentityCredentials({IdentityPoolId: 'us-east-1:9e348431-fd20-446f-a859-26c395db4e30'});            window.AWS = AWS;            _pollyController = new PollyController(new AWS.Polly({apiVersion: '2016-06-10'}));            // todo initialized check            _initialized = true;        }        function callback () {            _pollyController.getTTSForChapter();        }        this.turnOnTTS = function () {            if(TTSOn) return;            ReadiumSDK.reader.on('PaginationChanged', callback);            TTSOn = true;        }        this.turnOffTTS = function () {            TTSOn = false;            ReadiumSDK.reader.removeListener('PaginationChanged', callback);        }        this.play = function (id) {            if(!TTSOn) return;            _pollyController.playAudio(id);        }        this.pause = function () {        }    });});define('readium_plugin_polly', ['readium_plugin_polly/main'], function (main) { return main; });