define(['./helpers', './modal'],function(Helpers, modal) {    let tmpColor = '';    let timeout;    function addWordToDictionary(element){        clearTimeout(timeout);        const word = element.innerText.toLowerCase();        if(self.myWords.get(word) === undefined) {            self.myWords.set(word, 1);        } else {            self.myWords.set(word, self.myWords.get(word)+1);        }        console.log(self.myWords);        let str = '';        var mapAsc = new Map([...self.myWords.entries()].sort());        mapAsc.forEach((value, key, map) => {            str += `${key} - ${value}<br>`;        });        document.getElementById('dictionary').innerHTML = str;    }    let elem = undefined;    return {        tokenize: function (element) {            window.d1 = element;            elem = element.innerHTML;       //     ReadiumSDK.reader.plugins.highlights.addSelectionHighlight(Math.floor((Math.random()*1000000)), "test-highlight");        },        unTokenize: function (element) {       //     console.log(element)            element.innerHTML = elem;        },        addHighlight: function(element, translateService) {            if(!window.b2)  window.b2 = element;            console.log(element)            tmpColor = element.style.color;            element.style.color = 'red';            timeout = setTimeout(() => {              //  addWordToDictionary(element)                modal.showModal(element, translateService);            }, 1500);        },        removeHighlight: function(element) {            clearTimeout(timeout);            element.style.color = tmpColor;        },        click: function(element, translateService) {            modal.showModal(element, translateService)        },    };});